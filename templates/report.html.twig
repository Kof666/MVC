{% extends 'base.html.twig' %}

{% block title %}Rapporter{% endblock %}

{% block main %}
<div class="flex-container">
    <div class="flex1">
        <ul>
            <li><a href="#kmom01">kmom01</a></li>
            <li><a href="#kmom02">kmom02</a></li>
            <li><a href="#kmom03">kmom03</a></li>                
            <li><a href="#kmom04">kmom04</a></li>
            <li><a href="#kmom05">kmom05</a></li>
            <li><a href="#kmom06">kmom06</a></li>
            <li><a href="#kmom07">kmom07</a></li>
            <li><a href="#kmom08">kmom08</a></li>
            <li><a href="#kmom09">kmom09</a></li>
            <li><a href="#kmom10">kmom10</a></li>
        </ul>
    </div>
    <div class="flex2">
        <h1>Rapporter</h1>
        <h2 id="kmom01">kmom01</h2>
        <p>
            Ja, då va vi igång. Innan jag började med det här kurspaketet har läst nån fristående grundkurs i java på universitetsnivå och programmering med c# på gymnasial nivå. Med det sagt så känner jag ju igen ramarna för objektorienterad programmering vilket ju underlättar en del. 
            </p>
            <p>
            Om jag jämför med PHP så känns ju grundstrukturen för klasserna väldigt lika bara lite uttryck och syntax som ändras. Varje klass innehåller variabler specifika för klassen, olika metoder/funktioner som uträttar olika saker, konstruktor som kallas när man skapar en instans av klassen etc. PHP pratar om medlemsvariabler medan i java lärde vi oss kalla dem för klassvariabler och så vidare. Några saker som kan vara bra att kolla lite extra på i början tycker jag kan vara tex autoloading. Känns smart att automatisera så alla olika filer hittar varandra utan att behöva inkludera dem en efter en. Destructor var lite nytt för mej oxå vilket ju också kan va smart. Pil operatorn -> som används för att få tillgång till klassens metoder tycker jag är en vital del att lägga på minnet(tex object->function eller Person->getAge()). Jag tycker även att det kan vara värt lite extra tid att ordna sin config fil och lägga in den kod som hjälper oss att se felutskrifter.
            </p>
            <p>
            Ramverket vi använder oss av påminner ju i stort om det javascript ramverk vi använde i databas kursen på det sättet att man arbetar med routes som länkas till olika sökvägar och templates. Detta ramverk känns av någon anledning enklare att förstå sig på för mej. Kanske är det för att jag känner mej mer hemma med PHP (databaskursen var mitt första möte med javascript). Det är nog egentligen twig delen som jag tyvärr fortfarande är lite långsam med. Jag övervägde att köra stylen med sass men insåg att det framför allt är variablerna jag eftersöker därifrån och det kan jag ju faktiskt få med css oxå. dessutom fungerar då scriptet npm run watch direkt oxå. visserligen tyckte jag jag läste nånstans att det var ganska enkelt att ändra till sass, typ bara ändra namnet på style/app.css till style/app.sass men jag valde att lägga tiden på andra saker denna gången helt enkelt.
            </p>
            <p>
            Det kändes som det fanns väldigt mycket information i artikeln “PHP The Right Way”. Svårt att säga om något är mer värdefullt än något annat. Jag tror det beror ganska mycket på vilken nivå av kunskap man har och vad man kan ta till sig på ett bra sätt. Jag fastnade mest i delarna “Coding Practices” och "Databases", antagligen för det ligger närmast för mig just nu kanske. Det är lite dumt då det borde vara smartare att läsa mer om de saker man inte har koll alls på nu när jag tänker efter. 
            </p>
            <p>
            Någon TIL den här veckan…börjar vänja sig vid olika ramverk nu..och att allt tar mer tid än man tänkt sig börjar man ju vänja sig vid..men min TIL får nog bli att stack overflow tar mer tid än rätt dokumentation även om man inte tror det först..
            </p>
            
        <h2 id="kmom02">kmom02</h2>
        <h3>Förklara kort de objektorienterade konstruktionerna arv, komposition, interface och trait och hur de används i PHP.</h3><br>
            
            <p>Dessa begrepp förklarar olika relationer mellan klasserna. Dom olika konstruktionerna fungerar lite olika och är lite olika starka.</p>
            
            <p>Arv som jag kanske tycker är lättast att förklara kan ses som en specialisering av en klass. Här kommer jag såklart att tänka på CardGraphic som ärver alla egenskaper av Card och sedan lägger till en grafisk representation.</p>
            
            <p>Komposition har en stark relation mellan klasserna då den ena klassen har en instans av den andra klassen i sin konstruktor. Detta gör att när ägar objektet slutar existera så slutar även det ägda objektet existera.</p>
            
            <p>I PHP kan en klass inte ärva från flera olika klasser. Istället finns det som kallas trait. Man skulle kunna säga att man använder/kopierar in delar i klassen snarare än ärver.</p>
           
            <p>Och sist men inte minst då interface. Som jag förstår det kan en klass implementera olika traits som i sin tur ger det traits api. Osäker på om det bara är trait eller även olika interface i interfacen. Så mycke mer än så vet jag faktiskt inte</p>
             
        <h3>Berätta om din implementation från uppgiften. Hur löste du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential ser du i din koden och dina klasser?</h3><br>
            
            <p>Jag är hyfsat nöjd ändå. Jag är inte nöjd med hastigheten jag har i mitt programmerade, det tar alldeles för lång tid att förstå och komma in i nya ramverk etc. Jag känner nog att det finns ganska mycke förbättringspotential här. Känns som det är för mycke kod i vissa routes. Kanske skulle jag byggt upp klasserna på ett bättre sätt, kanske kan lägga till någon funktion så man inte behöver skriva samma kod flera gånger etc. Sen har det hamnat en hel det i sessionen också vilket i sin tur gör att jag måste hämta och spara ner till sessionen ganska mycket. Detta är för att jag vill separera de olika kortlekarna med mera till de olika kraven för att få bättre kontroll när jag felsöker mej fram. På en färdig webbplats skulle man nog kunna använda sig av samma kortlek på flera ställen kanske.</p>
            
            <p>Ja, nu började jag kanske i den negativa änden. Det roliga är ju att jag faktiskt kommer framåt och att det känns roligt att jobba med.</p>
             
             
        <h3>Vilka är dina reflektioner så här långt med att jobb i Symfony med applikationskod enligt MVC?</h3><br>
            <p>Min första känsla med Symfony var att det kändes enklare och roligare än till exempel Express som vi hade i databas. Men sen blev det ju ändå lite krångligt i början. Både att platsen på studentservern tog slut (vilket ju egentligen inte har med Symfony att göra..tog bara ett tag att fatta det) och sen strulade även bakgrundsbilden. Och det retar mej ganska mycket men man får väl släppa det när även lärarteamet har svårigheter att hitta lösningen helt enkelt och försöka fokusera på lite mer rätt saker. Det känns även kanske lite enklare med Symfony för att man känner igen strukturen med routes och templates från tidigare ramverk. Det är ju inte exakt lika men liknande. Jag känner nog också att twig är en del där jag tappar flytet ibland. Men i stort så känns Symfony enligt MVC kul.</p>
             
        <h3>Vilken är din TIL för detta kmom?</h3><br>

            <p>Min till borde vara prioriteringslista. Tyvärr verkar jag inte lära mig det så då tar det ju lite mer tid än beräknat..</p>            
        <h2 id="kmom03">kmom03</h2>
        <p>Här kommer redovisningstexten för detta kursmoment.</p>
        <h2 id="kmom04">kmom04</h2>
        <p>Här kommer redovisningstexten för detta kursmoment.</p>
        <h2 id="kmom05">kmom05</h2>
        <p>Här kommer redovisningstexten för detta kursmoment.</p>
        <h2 id="kmom06">kmom06</h2>
        <p>Här kommer redovisningstexten för detta kursmoment.</p>
        <h2 id="kmom07">kmom07</h2>
        <p>Här kommer redovisningstexten för detta kursmoment.</p>
        <h2 id="kmom08">kmom08</h2>
        <p>Här kommer redovisningstexten för detta kursmoment.</p>
        <h2 id="kmom09">kmom09</h2>
        <p>Här kommer redovisningstexten för detta kursmoment.</p>
        <h2 id="kmom10">kmom10</h2>
        <p>Här kommer redovisningstexten för detta kursmoment.</p>

    </div>
</div>
{% endblock %}

